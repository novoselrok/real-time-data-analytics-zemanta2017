input {
	tcp {
		port => 5000
	}
}

filter {
	json {
		source => "message"
		target => "data"
	}

	# Drop empty logs
	if ![data] {
		drop {}
	}

	# Change data key to appropriate type (bid, win, click)
	mutate {
		rename => { "data" => "%{[data][type]}" }
		remove_field => ["message"]
	}

	# Drop logs without id
	if [bid] and ![bid][id] {
		drop {}
	} else if [win] and ![win][bid_id] {
		drop {}
	} else if [click] and ![click][bid_id] {
		drop {}
	}
}

output {
	if [click] {
		elasticsearch {
			hosts => "elasticsearch"
			document_id => "%{[click][bid_id]}"
			action => "update"
			doc_as_upsert => true
			# index => "ad_data"
			template => "/usr/share/logstash/config/template.json"
			template_name => "template_1"
			template_overwrite => true
		}
	} else if [win] {
		elasticsearch {
			hosts => "elasticsearch"
			document_id => "%{[win][bid_id]}"
			action => "update"
			doc_as_upsert => true
			# index => "ad_data"
			template => "/usr/share/logstash/config/template.json"
			template_name => "template_1"
			template_overwrite => true
		}
	} else {
		elasticsearch {
			hosts => "elasticsearch"
			document_id => "%{[bid][id]}"
			# index => "ad_data"
			template => "/usr/share/logstash/config/template.json"
			template_name => "template_1"
			template_overwrite => true
		}
	}
}
